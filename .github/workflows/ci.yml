name: Continuous Integration

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install_cache:
    name: Install code and deps
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 20
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4
      - run: corepack enable

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies 👨🏻‍💻
        shell: bash
        run: cp vidos-config-empty.json vidos-config.json && yarn install --immutable

  lint:
    needs: install_cache
    name: Lint code base
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 20
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4
      - run: corepack enable

      - name: Install code and deps
        uses: ./.github/actions/install

      - name: Run linter 👀
        run: yarn lint

  # cypress:
  #   needs: install_cache
  #   name: Cypress
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os:
  #         - ubuntu-latest
  #       node:
  #         - 20
  #   steps:
  #     - name: Checkout 🛎
  #       uses: actions/checkout@v4
  #     - run: corepack enable

  #     - name: Install code and deps
  #       uses: ./.github/actions/install

  #     - name: Install ruby
  #       run: |
  #         sudo apt-get install -y ruby &&
  #         ruby poi_explode.rb cypress/fixtures/teritorio/references/pois.geojson

  #     - name: Prepare
  #       run: cp -R cypress/fixtures/ public/fixtures

  #     - name: Run Cypress Tests 🧪
  #       uses: cypress-io/github-action@v6
  #       env:
  #         CONFIG: vidos-config-cypress.json
  #         CYPRESS: true
  #       with:
  #         build: yarn build
  #         install-command: yarn --immutable --silent
  #         start: node .output/server/index.mjs
  #         wait-on: 'http://127.0.0.1:3000'
  #         wait-on-timeout: 30

  #     - name: Keep failed cypress-screenshots
  #       uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: cypress-screenshots
  #         path: cypress/screenshots

  docker:
    runs-on: ubuntu-latest
    needs: [lint]
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/tags/v')

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Docker Build and Push
        uses: cartoway/docker-compose-build-push-action@main
        with:
          service: vido
          registry_password: ${{ secrets.GITHUB_TOKEN }}
