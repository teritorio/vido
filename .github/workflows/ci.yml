name: Continuous Integration

on: push

jobs:
  install_cache:
    name: Instal code and deps
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - uses: ./.github/actions/install

  lint:
    needs: install_cache
    name: Lint code base
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - uses: ./.github/actions/install

      - name: Run linter ðŸ‘€
        run: yarn lint

  cypress:
    needs: install_cache
    name: Cypress
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - uses: ./.github/actions/install

      - name: Install ruby
        run: |
          sudo apt-get install -y ruby &&
          ruby poi_explode.rb cypress/fixtures/teritorio/references/pois.geojson

      - name: Prepare
        run: |
          cp -R cypress/fixtures/ public/fixtures &&
          CONFIG=vidos-config-cypress.json CYPRESS=true yarn build

      - name: Run Cypress Tests ðŸ§ª
        uses: cypress-io/github-action@v5
        env:
          CONFIG: ../vidos-config-cypress.json
          CYPRESS: true
        with:
          install-command: yarn --silent
          start: yarn start
          wait-on: 'http://127.0.0.1:3000'
          wait-on-timeout: 30

      - name: Keep failled cypress-screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

  histoire:
    needs: install_cache
    name: Histoire
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - uses: ./.github/actions/install

      - name: Install more packages
        run: |
          sudo apt-get install -y ruby &&
          ruby poi_explode.rb cypress/fixtures/teritorio/references/pois.geojson

      - name: Test Histoire
        run: |
          CONFIG=vidos-config-empty.json yarn prepare &&
          CONFIG=vidos-config-empty.json yarn test:histoire

      - name: Keep failled histoire-screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: histoire-screenshots
          path: __screenshots__

      - name: Deploy to gh-pages
        if: github.ref == 'refs/heads/develop'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./.histoire/dist

  deploy_dev:
    needs:
      - install_cache
      - lint
      - cypress
      - histoire
    if: github.ref == 'refs/heads/develop'
    name: Deploy Dev
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        node:
          - 18

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - name: Deploy
        uses: up9cloud/action-rsync@master
        env:
          HOST: dev.appcarto.teritorio.xyz
          KEY: ${{secrets.DEPLOY_SSH_KEY_DEV}}
          TARGET: /var/www/clients/client3/web3/web/vido

          VERBOSE: false
          USER: devappcarto
          ARGS: -az --exclude=/.git/ --exclude=vidos.config.ts
          SSH_ARGS: '-p 2222 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
          SOURCE: .

          PRE_SCRIPT: |
            echo -n 'VIDO: Deployment started at: ' &&
            date -u
          POST_SCRIPT: |
            cd /var/www/clients/client3/web3/web/vido &&
            ruby poi_explode.rb cypress/fixtures/teritorio/references/pois.geojson &&
            sed -i "s/# restart: unless-stopped/restart: unless-stopped/" docker-compose.yml &&
            docker-compose build && docker-compose up -d &&
            echo -n 'VIDO: Deployment completed at: ' &&
            date -u
